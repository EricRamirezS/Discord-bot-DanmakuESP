const {stripIndents, oneLine} = require('common-tags');
const Command = require('../base');
const {disambiguation} = require('../../util');
const Discord = require('discord.js');
const {guild, keys} = require('../../../../../listener/db/JSONSListeners');
module.exports = class HelpCommand extends Command {
    constructor(client) {
        super(client, {
            name: 'ayuda',
            group: 'util',
            memberName: 'ayuda',
            aliases: ['commands', 'comandos', 'help'],
            description: 'Muestra la lista de comandos disponibles, o información detallada de un comando en específico.',
            details: oneLine`
				El comando puede ser parte de un comando o un comando completo.
				Si no se especifica, se enumerarán todos los comandos disponibles.
			`,
            examples: ['ayuda', 'help prefix'],
            guarded: true,

            args: [
                {
                    key: 'command',
                    prompt: '¿Para qué comando desea ver la ayuda?',
                    type: 'string',
                    default: ''
                }
            ]
        });
    }

    async run(msg, args) { // eslint-disable-line complexity
        let guild_data = await guild(msg.guild.id);
        let prefix = "~";
        if (guild_data) {
            prefix = guild_data[keys.prefix];
        }
        const groups = this.client.registry.groups;
        groups.delete('util');
        groups.delete('commands');
        const commands = this.client.registry.findCommands(args.command, false, msg);
        const showAll = args.command && args.command.toLowerCase() === 'all';
        if (args.command && !showAll) {
            if (commands.length === 1) {
                let help = stripIndents`
					${`__Comando **${commands[0].name}**:__ ${commands[0].description} ${commands[0].guildOnly ? ' (Solo se puede usar en servidores)' : ''}
						${commands[0].nsfw ? ' (NSFW)' : ''}`}
					**Formato:** ${msg.anyUsage(`${commands[0].name}${commands[0].format ? ` ${commands[0].format}` : ''}`, prefix)}
				`;
                if (commands[0].aliases.length > 0) help += `\n**Alias:** ${commands[0].aliases.join(', ')}`;
                help += `\n${oneLine`
					**Grupo:** ${commands[0].group.name}
					(\`${commands[0].groupID}:${commands[0].memberName}\`)
				`}`;
                if (commands[0].details) help += `\n**Detalle:** ${commands[0].details}`;
                if (commands[0].examples) help += `\n**Ejemplos:**\n${commands[0].examples.join('\n')}`;

                const messages = [];
                messages.push(await msg.reply(help));
                return messages;
            } else if (commands.length > 15) {
                return msg.reply('No puedo encontrar multiples comandos. Sea más especifico/a, por favor.');
            } else if (commands.length > 1) {
                return msg.reply(disambiguation(commands, 'comandos'));
            } else {
                return msg.reply(
                    `No he podido identificar el comando. Usa ${msg.usage(
                        null, msg.channel.type === 'dm' ? null : undefined, msg.channel.type === 'dm' ? null : undefined
                    )} para ver todos los comandos.`
                );
            }
        } else {
            let embed = new Discord.MessageEmbed();
            embed.setTitle("Lista de Comandos");
            embed.setDescription(stripIndents`Para ejecutar un comando simplemente usa ${Command.usage('comando', prefix, null)}.
            
            Usa ${this.usage('<comando>', prefix, null)} para ver información en especifico sobre un comando.
            Usa ${this.usage('all', prefix, null)} para ver *todos* los comandos, no solo los disponibles.`);
            groups.filter(grp => grp.commands.some(cmd => !cmd.hidden && (showAll || cmd.isUsable(msg))))
                .map(grp => {
                    embed.addField(
                        grp.name,
                        stripIndents`${grp.commands.filter(cmd => !cmd.hidden && ((showAll || cmd.isUsable(msg) && (msg.channel.nsfw || !cmd.nsfw))))
                            .map(cmd => `\`${cmd.name}\``).join(' , ')
                        }`
                    )
                });
            await msg.reply(embed);
        }
    }
};
